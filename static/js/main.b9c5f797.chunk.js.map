{"version":3,"sources":["page/account/AccountPage.tsx","page/account/LoginPage.tsx","page/friend/FriendListPage.tsx","App.tsx","index.tsx"],"names":["AccountPage","alter","setPath","React","useState","phoneNumber","setPhoneNumber","isJoinSuccess","setSuccess","error","setError","loading","setLoading","to","BASE_URL","className","type","placeholder","value","onChange","e","target","onClick","event","preventDefault","fetch","process","method","headers","body","JSON","stringify","id","then","res","json","ok","catch","finally","LoginPage","setLogin","console","log","localStorage","setItem","token","FriendListPage","getItem","currentType","setType","shouldFetch","setShouldFetch","0","list","page","total","1","2","data","setData","useEffect","map","user","isFollow","follow","App","Boolean","isLogin","path","removeItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9c5f797.chunk.js","sourcesContent":["import React from \"react\";\nimport { Redirect } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\ninterface IProps {\n  alter?: boolean;\n  setPath?: any;\n}\nconst AccountPage = ({ alter = false, setPath }: IProps) => {\n  const [phoneNumber, setPhoneNumber] = React.useState(\"\");\n  const [isJoinSuccess, setSuccess] = React.useState(false);\n  const [error, setError] = React.useState(\"\");\n  const [loading, setLoading] = React.useState(false);\n\n  const BASE_URL =\n    process.env.NODE_ENV === \"production\" ? process.env.REACT_APP_BASE_URL : \"\";\n\n  setPath && setPath();\n\n  const joinHandler = () => {\n    if (phoneNumber === \"\" && !loading) return;\n    setLoading(true);\n    fetch(process.env.REACT_APP_API_URL + \"/join\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id: phoneNumber }),\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        if (json.ok) {\n          setSuccess(true);\n        } else {\n          setError(\"아이디가 이미 존재합니다.\");\n        }\n      })\n      .catch((error) => setError(\"서버와의 연결 문제가 있습니다.\"))\n      .finally(() => setLoading(false));\n  };\n  return isJoinSuccess ? (\n    <Redirect to={BASE_URL + \"/\"} />\n  ) : (\n    <div className=\"flex h-full items-center justify-center\">\n      <div className=\" h-60 w-1/3 max-w-sm mb-56 border border-gray-300 bg-white flex flex-col p-10\">\n        <div className=\" w-full pb-1 mb-2 text-gray-500 text-sm\">\n          {alter ? \"수정\" : \"회원가입\"}\n        </div>\n        <form className=\"flex flex-col\">\n          <input\n            className=\" w-full h-10 border border-gray-300 rounded-lg p-2\"\n            type=\"text\"\n            placeholder=\"전화번호\"\n            value={phoneNumber}\n            onChange={(e) => {\n              setPhoneNumber(e.target.value);\n            }}\n          />\n          {error !== \"\" && <div className=\" text-red-500 text-sm\">{error}</div>}\n          <button\n            className=\"w-full h-10 my-4 bg-blue-500 text-white border rounded-lg p-2 active:bg-blue-400\"\n            onClick={(event) => {\n              event.preventDefault();\n              joinHandler();\n            }}\n          >\n            {loading ? \"...\" : alter ? \"수정\" : \"회원가입\"}\n          </button>\n        </form>\n        {!alter && (\n          <div className=\"text-sm\">\n            로그인 페이지로{\" \"}\n            <Link to={BASE_URL + \"/login\"} className=\" text-blue-500 font-bold\">\n              이동\n            </Link>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AccountPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\ninterface IProps {\n  setLogin: (isLogin: boolean) => void;\n}\n\nconst LoginPage = ({ setLogin }: IProps) => {\n  const [phoneNumber, setPhoneNumber] = React.useState(\"\");\n  const [error, setError] = React.useState(\"\");\n  const [loading, setLoading] = React.useState(false);\n\n  const BASE_URL =\n    process.env.NODE_ENV === \"production\" ? process.env.REACT_APP_BASE_URL : \"\";\n\n  const loginHandler = () => {\n    if (phoneNumber === \"\" && !loading) return;\n    setLoading(true);\n\n    fetch(process.env.REACT_APP_API_URL + \"/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ id: phoneNumber }),\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        console.log(json);\n        if (json.ok) {\n          localStorage.setItem(\"token\", json.token);\n          setLogin(true);\n        } else {\n          setError(\"아이디가 틀렸습니다.\");\n        }\n      })\n      .catch(() => setError(\"서버와의 연결 문제가 있습니다.\"))\n      .finally(() => setLoading(false));\n  };\n  return (\n    <div className=\"flex h-full items-center justify-center\">\n      <div className=\" h-60 w-1/3 max-w-sm mb-56 border border-gray-300 bg-white flex flex-col p-10\">\n        <div className=\" w-full pb-1 mb-2 text-gray-500 text-sm\">로그인</div>\n        <form className=\"flex flex-col\">\n          <input\n            className=\" w-full h-10 border border-gray-300 rounded-lg p-2\"\n            type=\"text\"\n            placeholder=\"전화번호\"\n            value={phoneNumber}\n            onChange={(e) => setPhoneNumber(e.target.value)}\n          />\n          {error !== \"\" && <div className=\" text-red-500 text-sm\">{error}</div>}\n          <button\n            className=\"w-full h-10 my-4 bg-blue-500 text-white border rounded-lg p-2 active:bg-blue-400\"\n            type=\"button\"\n            onClick={(event) => {\n              event.preventDefault();\n              loginHandler();\n            }}\n          >\n            {loading ? \"...\" : \"로그인\"}\n          </button>\n        </form>\n        <div className=\"text-sm\">\n          계정이 없으신가요?{\" \"}\n          <Link to={BASE_URL + \"/join\"} className=\" text-blue-500 font-bold\">\n            가입하기\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","import { listenerCount } from \"node:events\";\nimport React from \"react\";\n\ninterface IUser {\n  id: number;\n  phoneNumber: string;\n  isFollow: boolean;\n}\n\ninterface IData {\n  [type: number]: {\n    list: IUser[];\n    error?: any;\n    loading: boolean;\n    page: number;\n    total: number;\n  };\n}\n\ninterface IProps {\n  setPath?: any;\n}\n\nconst FriendListPage = ({ setPath }: IProps) => {\n  setPath && setPath();\n  const token = localStorage.getItem(\"token\");\n  const [currentType, setType] = React.useState(0);\n  const [shouldFetch, setShouldFetch] = React.useState(true);\n  const [data, setData] = React.useState<IData>({\n    0: {\n      list: [],\n      error: null,\n      loading: false,\n      page: 0,\n      total: 0,\n    },\n    1: {\n      list: [],\n      error: null,\n      loading: false,\n      page: 0,\n      total: 0,\n    },\n    2: {\n      list: [],\n      error: null,\n      loading: false,\n      page: 0,\n      total: 0,\n    },\n  });\n\n  const follow = (id: number) => {\n    fetch(process.env.REACT_APP_API_URL + \"/follow?opponent=\" + id, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": token!,\n      },\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        console.log(json);\n      });\n  };\n  const unfollow = (id: number) => {\n    fetch(process.env.REACT_APP_API_URL + \"/unfollow?opponent=\" + id, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-access-token\": token!,\n      },\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        console.log(json);\n      });\n  };\n  const fetchList = () => {\n    const urlMap = [\"/recommend\", \"/follows\", \"/followers\"];\n    fetch(\n      process.env.REACT_APP_API_URL +\n        urlMap[currentType] +\n        \"?page=\" +\n        (data[currentType].page + 1),\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-access-token\": token!,\n        },\n      }\n    )\n      .then((res) => res.json())\n      .then((json) => {\n        console.log(json);\n        if (json.ok) {\n          setData({\n            ...data,\n            [currentType]: {\n              loading: false,\n              list: [...data[currentType].list, ...json.list],\n              error: null,\n              page: json.page,\n              total: json.total,\n            },\n          });\n        }\n      });\n  };\n\n  React.useEffect(() => {\n    if (shouldFetch) {\n      setData({\n        ...data,\n        [currentType]: {\n          ...data[currentType],\n          loading: true,\n        },\n      });\n\n      fetchList();\n\n      setShouldFetch(false);\n    }\n  }, [shouldFetch]);\n  return (\n    <div className=\" w-3/4 mx-auto mt-10 flex flex-col flex-1\">\n      <ul className=\"ml-4 flex text-gray-700\">\n        <li\n          className={`cursor-pointer mr-4 ${\n            currentType === 0 && \"text-blue-500\"\n          }`}\n          onClick={() => currentType !== 0 && setType(0)}\n        >\n          추천\n        </li>\n        <li\n          className={`cursor-pointer mr-4 ${\n            currentType === 1 && \"text-blue-500\"\n          }`}\n          onClick={() => currentType !== 1 && setType(1)}\n        >\n          팔로우\n        </li>\n        <li\n          className={`cursor-pointer mr-4 ${\n            currentType === 2 && \"text-blue-500\"\n          }`}\n          onClick={() => currentType !== 2 && setType(2)}\n        >\n          팔로워\n        </li>\n      </ul>\n      <ul className=\"flex-1 bg-white mt-2 rounded-sm border\">\n        {data[currentType].list.map((e) => (\n          <li key={e.id}>\n            <div>\n              <span>{e.phoneNumber}</span>\n              <button\n                onClick={() => {\n                  setData({\n                    ...data,\n                    [currentType]: {\n                      ...data[currentType],\n                      list: data[currentType].list.map((user) =>\n                        user.id === e.id\n                          ? { ...user, isFollow: !user.isFollow }\n                          : user\n                      ),\n                    },\n                  });\n                  e.isFollow ? unfollow(e.id) : follow(e.id);\n                }}\n              >\n                {e.isFollow ? \"언팔로우\" : \"팔로우\"}\n              </button>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default FriendListPage;\n","import React from \"react\";\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  Redirect,\n  Link,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport AccountPage from \"./page/account/AccountPage\";\nimport LoginPage from \"./page/account/LoginPage\";\nimport FriendListPage from \"./page/friend/FriendListPage\";\n\nfunction App() {\n  const [isLogin, setLogin] = React.useState(\n    Boolean(localStorage.getItem(\"token\"))\n  );\n  const [path, setPath] = React.useState(0);\n\n  const BASE_URL =\n    process.env.NODE_ENV === \"production\" ? process.env.REACT_APP_BASE_URL : \"\";\n\n  return (\n    <div className=\"h-screen flex flex-col\">\n      <BrowserRouter>\n        <Switch>\n          {isLogin ? (\n            <>\n              <div className=\"w-screen h-12 flex justify-end items-center px-12 border-b border-gray-300 bg-white\">\n                <Link\n                  to={BASE_URL + \"/friends\"}\n                  className={`text-gray-700 mr-4 ${\n                    path === 0 && \"text-blue-500\"\n                  }`}\n                >\n                  친구들\n                </Link>\n                <Link\n                  to={BASE_URL + \"/update\"}\n                  className={`text-gray-700 mr-4 ${\n                    path === 1 && \"text-blue-500\"\n                  }`}\n                >\n                  정보수정\n                </Link>\n                <span\n                  className=\"text-gray-700 cursor-pointer\"\n                  onClick={() => {\n                    localStorage.removeItem(\"token\");\n                    setLogin(false);\n                  }}\n                >\n                  로그아웃\n                </span>\n              </div>\n              <Route path={BASE_URL + \"/friends\"}>\n                <FriendListPage setPath={() => setPath(0)} />\n              </Route>\n              <Route path={BASE_URL + \"/update\"}>\n                <AccountPage alter={true} setPath={() => setPath(1)} />\n              </Route>\n              <Route path=\"*\">\n                <Redirect to={BASE_URL + \"/friends\"} />\n              </Route>\n            </>\n          ) : (\n            <>\n              <Route path={BASE_URL + \"/login\"}>\n                <LoginPage setLogin={setLogin} />\n              </Route>\n              <Route path={BASE_URL + \"/join\"}>\n                <AccountPage />\n              </Route>\n              <Route path=\"*\">\n                <Redirect to={BASE_URL + \"/login\"} />\n              </Route>\n            </>\n          )}\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}